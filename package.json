{
	"name": "taxi-for-email-validate-upload",
	"displayName": "Taxi for Email EDS validate and upload",
	"description": "Validate Email Design System (EDS) syntax and upload EDS files",
	"version": "0.1.1",
	"publisher": "tuck1s",
	"repository": {
		"type": "git",
		"url": "https://github.com/tuck1s/taxitest.git"
	},
	"icon": "images/taxiforemail-white-on-blue.png",
	"engines": {
		"vscode": "^1.64.0"
	},
	"categories": [
		"Linters"
	],
	"activationEvents": [
		"onStartupFinished"
	],
	"main": "./out/extension.js",
	"contributes": {
		"commands": [
			{
				"command": "taxitest.validateEDS",
				"title": "Taxi for Email - validate Email Design System syntax"
			},
			{
				"command": "taxitest.setEDS",
				"title": "Taxi for Email - set Email Design System ID for this workspace"
			},
			{
				"command": "taxitest.updateEDS",
				"title": "Taxi for Email - update Email Design System"
			}
		],
		"configuration": [
			{
				"type": "object",
				"title": "Taxi for Email",
				"properties": {
					"taxi.uri": {
						"order": 1,
						"type": "string",
						"format": "uri",
						"default": "https://myaccount.emailcms.net",
						"description": "Enter your account URI including your account subdomain. You can find this in the browser address bar when you are logged in to your account."
					},
					"taxi.apiKey": {
						"order": 2,
						"type": "string",
						"default": "abcdef",
						"minLength": "1",
						"description": "Enter an API Key from your account. When you are logged in to your account, create a key under Integrations / API Keys / Add new. Record this value safely."
					},
					"taxi.keyId": {
						"order": 3,
						"type": "string",
						"default": "ID_xyzzyabcd",
						"minLength": "1",
						"description": "Enter an API Key ID from your account. This is visible as you add a new key. Existing key IDs can be seen under Integrations / API Keys / Edit API Key."
					},
					"taxi.showSummary": {
						"order": 4,
						"type": "boolean",
						"default": false,
						"description": "Enables informational output of lines checked, errors, warnings, and run time"
					},
					"taxi.designSystemId": {
						"order": 5,
						"type": "integer",
						"default": "",
						"description": "The design system id relating to the current workspace"
					},
					"taxi.designSystemDescr": {
						"order": 6,
						"type": "string",
						"default": "",
						"description": "Optional text description, held solely in local workspace"
					}
				}
			}
		]
	},
	"scripts": {
		"vscode:prepublish": "npm run compile",
		"compile": "tsc -p ./",
		"watch": "tsc -watch -p ./",
		"pretest": "npm run compile && npm run lint",
		"lint": "eslint src --ext ts",
		"test": "node ./out/test/runTest.js",
		"coverage": "c8 --check-coverage npm run test"
	},
	"devDependencies": {
		"@types/glob": "^7.2.0",
		"@types/mocha": "^9.0.0",
		"@types/node": "14.x",
		"@types/vscode": "^1.63.0",
		"@typescript-eslint/eslint-plugin": "^5.9.1",
		"@typescript-eslint/parser": "^5.9.1",
		"@vscode/test-electron": "^2.0.3",
		"c8": "^7.12.0",
		"eslint": "^8.6.0",
		"glob": "^7.2.0",
		"mocha": "^10.1.0",
		"typescript": "^4.5.4"
	},
	"dependencies": {
		"axios": "^0.25.0",
		"form-data": "^4.0.0"
	}
}
